@using ProgrammingForum_ASPNETCore.Models.PostReplyModels;
@model ProgrammingForum_ASPNETCore.Models.PostModels.PostViewModel
@{
    var liked = "fa-regular";
    if ((bool)ViewData["liked"]) liked = "fa-solid";

    var disliked = "fa-regular";
    if ((bool)ViewData["disliked"]) disliked = "fa-solid";
}

<div>
    <h4>Post</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Content)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Content)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AuthorName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AuthorName)
        </dd>

        @{
            if (Model.AuthorPicture != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.AuthorPicture);
                string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                <img src="@imageSrc" width="100" height="100" />
            }
        }

        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

        <dd>
            <button class=" btn btn-outline-secondary" onclick="SubmitLike(@Model.Id,'@User.Identity.Name')" id="likepost-@Model.Id">
                <i id="likeIcon-@User.Identity.Name" class="@liked fa-thumbs-up"></i>
                <p id="likesCount-@Model.Id">
                    @Html.DisplayFor(model => model.LikesCount)
                </p>
            </button>

            <button class=" btn btn-outline-secondary" onclick="SubmitDislike(@Model.Id,'@User.Identity.Name')" id="dislikepost-@Model.Id">
                <i id="dislikeIcon-@User.Identity.Name" class="@disliked fa-thumbs-down"></i>
                <p id="dislikesCount-@Model.Id">
                    @Html.DisplayFor(model => model.DislikesCount)
                </p>
            </button>
        </dd>

    </dl>
</div>

<div id="createreply" class="col-md-4">
    @await Html.PartialAsync("~/Views/PostReply/_ReplyFormPartial.cshtml", new PostReplyCreateModel { PostId = Model.Id, AuthorName = User.Identity.Name})
</div>

<div id="replies">
    @await Html.PartialAsync("~/Views/PostReply/_PostRepliesPartial.cshtml", Model.PostReplies)
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/likesCount.js"></script>
<script src="~/js/dislikesCount.js"></script>