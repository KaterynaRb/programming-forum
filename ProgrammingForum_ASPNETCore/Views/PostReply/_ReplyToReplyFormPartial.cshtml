@model int

<div id="reply-@Model" class="col-md-7" style="display:none">

    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-12">
                <textarea placeholder="Reply..." id="replytoreply-@Model" class="form-control" rows="2"></textarea>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1">
                <p>@ViewBag.Message</p>
                <button type="button" class="btn btn-secondary" onclick="SendReplyToReply(@Model)"> Add comment </button>
            </div>
        </div>
    </div>
</div>



<script>

    function AreaForReplyToReply(id) {
        var rep = document.getElementById("reply-" + id);

        if (rep.style.display === 'none') {
            rep.style.display = 'block';
        } else {
            rep.style.display = 'none';
        }
    }

    function SendReplyToReply(id) {
        var parentId = id;
        var contentReply = document.getElementById("replytoreply-" + id).value;
        var data = { parentId: parentId, contentReply: contentReply };

        $.ajax({
            type: 'post',
            url: '/PostReply/CreateReplyToReply',
            data: data,
            success: function (response) {
                $("#replies").html(response);
                $("#replytoreply-" + id).value = "";
            }
        })
    }
</script>













@*@model ProgrammingForum_ASPNETCore.Models.PostReplyModels.PostReplyCreateModel



<div id="reply-@Model.ParentReplyId" class="col-md-7" style="display:none">

    @using (Html.BeginForm("CreateReplyToReply", "PostReply", FormMethod.Post, new { @id = "replytoreply-" + @Model.ParentReplyId }))
    {
        <div class="form-horizontal">

            <div class="form-group">
                <label class="text-light">Reply To Reply</label>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => Model.ContentReply, new { @class = "form-control", rows="1", @id = @Model.ParentReplyId})
                    @Html.ValidationMessageFor(model => Model.ContentReply, "", new { @class = "text-danger", @id = @Model.ParentReplyId })
                    @Html.HiddenFor(model => Model.PostId, new { @id = @Model.ParentReplyId })
                    @Html.HiddenFor(model => Model.ParentReplyId, new { @id = @Model.ParentReplyId })
                    @Html.HiddenFor(model => Model.AuthorName, new { @id = @Model.ParentReplyId })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2">
                    <p>@ViewBag.Message</p>
                    <button type="button" class="btn btn-secondary" onclick="SendReplyToReply(@Model.ParentReplyId)"> Reply </button>
                </div>
            </div>
        </div>
    }
</div>



<script>

    function AreaForReplyToReply(id){
        var rep = document.getElementById("reply-" + id);

        if (rep.style.display === 'none') {
            rep.style.display = 'block';
        } else {
            rep.style.display = 'none';
        }
    }

    function SendReplyToReply(id) {
        var data = $("#replytoreply-"+id).serialize();
        console.log(data);
        $.ajax({
            type: 'post',
            url: '/PostReply/CreatePostReply',
            data: data,
            success: function(response){
                $("#replies").html(response);
                $("#replytoreply-" + id)[0].reset();
                console.log("reset");
            }
        })
    }
</script>*@